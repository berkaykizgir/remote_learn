// ignore_for_file: must_be_immutable
import 'package:flutter/material.dart';

class IconProvider extends StatelessWidget {
  List<List<int>> data = [];
  double? width;
  double? height;
  bool? inverted;
  bool? disabled;
  int index;
  IconProvider(this.index, {Key? key, this.width, this.height, this.inverted, this.disabled}) : super(key: key) {
    switch (index) {
      case 6: // Laugh FACE EMOJİ
        data = [
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 2, 1, 5, 5, 5, 5, 1, 2, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 1],
          [1, 5, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        ];
        break;

      case 7: // Laugh Crying FACE EMOJİ
        data = [
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 1],
          [1, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 1],
          [1, 5, 5, 5, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 5, 5, 5, 1],
          [1, 5, 5, 1, 7, 7, 5, 5, 1, 5, 5, 1, 5, 5, 7, 7, 1, 5, 5, 1],
          [1, 5, 5, 5, 7, 7, 7, 5, 5, 5, 5, 5, 5, 7, 7, 7, 5, 5, 5, 1],
          [1, 5, 5, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 7, 7, 7, 7, 5, 5, 1],
          [1, 5, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 5, 5, 7, 7, 7, 7, 5, 1],
          [1, 5, 7, 7, 7, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 7, 7, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1],
          [1, 5, 5, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 5, 5, 1],
          [1, 5, 5, 5, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        ];
        break;

      case 8: // Love FACE EMOJİ
        data = [
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 1, 1, 5, 1, 1, 5, 5, 5, 5, 1, 1, 5, 1, 1, 5, 5, 1],
          [1, 5, 1, 4, 4, 1, 2, 4, 1, 5, 5, 1, 4, 4, 1, 2, 4, 1, 5, 1],
          [1, 5, 1, 4, 4, 4, 4, 4, 1, 5, 5, 1, 4, 4, 4, 4, 4, 1, 5, 1],
          [1, 5, 1, 4, 4, 4, 4, 4, 1, 5, 5, 1, 4, 4, 4, 4, 4, 1, 5, 1],
          [1, 5, 5, 1, 4, 4, 4, 1, 5, 5, 5, 5, 1, 4, 4, 4, 1, 5, 5, 1],
          [1, 5, 5, 5, 1, 4, 1, 5, 5, 5, 5, 5, 5, 1, 4, 1, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 1],
          [1, 5, 5, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 5, 5, 1],
          [1, 5, 5, 5, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        ];
        break;

      case 9: // Dolar FACE EMOJİ
        data = [
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 8, 5, 5, 5, 5, 5, 5, 5, 5, 8, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 8, 8, 5, 5, 5, 5, 5, 5, 5, 8, 8, 5, 5, 5, 1],
          [1, 5, 5, 5, 8, 5, 5, 5, 5, 5, 5, 5, 5, 8, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 8, 8, 8, 5, 5, 5, 5, 5, 5, 8, 8, 8, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 8, 5, 5, 5, 5, 5, 5, 5, 5, 8, 5, 5, 5, 1],
          [1, 5, 5, 5, 8, 8, 5, 5, 5, 5, 5, 5, 5, 8, 8, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 8, 5, 5, 5, 5, 5, 5, 5, 5, 8, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 1],
          [1, 5, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        ];
        break;

      case 10: // I dont like it face
        data = [
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        ];
        break;

      case 11: // Sad FACE EMOJİ
        data = [
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 2, 1, 5, 5, 5, 5, 1, 2, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 5, 1],
          [1, 5, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        ];
        break;

      case 12: // Crying FACE EMOJİ
        data = [
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 1],
          [1, 5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 1],
          [1, 5, 5, 5, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 1, 5, 5, 5, 1],
          [1, 5, 5, 1, 7, 7, 5, 5, 1, 5, 5, 1, 5, 5, 7, 7, 1, 5, 5, 1],
          [1, 5, 5, 7, 7, 7, 5, 5, 5, 5, 5, 5, 5, 5, 7, 7, 7, 5, 5, 1],
          [1, 5, 5, 7, 7, 7, 5, 5, 5, 5, 5, 5, 5, 5, 7, 7, 7, 5, 5, 1],
          [1, 5, 5, 7, 7, 7, 5, 5, 5, 5, 5, 5, 5, 5, 7, 7, 7, 5, 5, 1],
          [1, 5, 5, 7, 7, 7, 5, 5, 5, 5, 5, 5, 5, 5, 7, 7, 7, 5, 5, 1],
          [1, 5, 5, 7, 7, 7, 5, 5, 1, 1, 1, 1, 5, 5, 7, 7, 7, 5, 5, 1],
          [1, 5, 5, 7, 7, 7, 5, 1, 2, 2, 2, 2, 1, 5, 7, 7, 7, 5, 5, 1],
          [1, 5, 5, 7, 7, 7, 5, 1, 2, 2, 2, 2, 1, 5, 7, 7, 7, 5, 5, 1],
          [1, 5, 5, 7, 7, 7, 5, 1, 1, 1, 1, 1, 1, 5, 7, 7, 7, 5, 5, 1],
          [1, 5, 5, 7, 7, 7, 5, 5, 1, 1, 1, 1, 5, 5, 7, 7, 7, 5, 5, 1],
          [1, 5, 5, 7, 7, 7, 5, 5, 5, 5, 5, 5, 5, 5, 7, 7, 7, 5, 5, 1],
          [1, 5, 5, 7, 7, 7, 5, 5, 5, 5, 5, 5, 5, 5, 7, 7, 7, 5, 5, 1],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        ];
        break;

      case 13: //ANGRY FACE EMOJİ
        data = [
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [1, 5, 5, 5, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 6, 6, 5, 5, 5, 5, 5, 5, 6, 6, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 3, 3, 6, 6, 5, 5, 5, 5, 6, 6, 3, 3, 5, 5, 5, 1],
          [1, 5, 5, 5, 3, 2, 2, 1, 3, 5, 5, 3, 2, 2, 1, 3, 5, 5, 5, 1],
          [1, 5, 5, 5, 3, 2, 2, 1, 3, 5, 5, 3, 2, 2, 1, 3, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1, 1, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1],
          [1, 5, 5, 5, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 5, 5, 5, 1],
          [1, 5, 5, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 5, 5, 1],
          [1, 5, 5, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 5, 5, 1],
          [1, 5, 5, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 5, 5, 1],
          [0, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0],
          [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        ];
        break;

      default:
        break;
    }
  }
  @override
  Widget build(BuildContext context) {
    return LayoutBuilder(
      builder: (context, constraints) => CustomPaint(
        size: Size(width ?? constraints.maxWidth, height ?? constraints.maxWidth / (data[0].length / data.length)),
        painter: _MenuIconPainter(data, inverted ?? false, disabled ?? false),
      ),
    );
  }
}

class _MenuIconPainter extends CustomPainter {
  List<List<int>> data = [];
  bool inverted = false;
  bool disabled = false;
  _MenuIconPainter(this.data, this.inverted, this.disabled) : super();
  @override
  void paint(Canvas canvas, Size size) {
    double wRatio = size.width / data[0].length;
    double hRatio = size.height / data.length;
    List<Paint> paint = [
      Paint(),
      Paint()
        ..color = inverted ? const Color.fromARGB(255, 255, 255, 255) : const Color.fromARGB(255, 0, 0, 0)
        ..style = PaintingStyle.fill
        ..strokeWidth = 1,
      Paint()
        ..color = inverted ? const Color.fromARGB(255, 0, 0, 0) : const Color.fromARGB(255, 255, 255, 255)
        ..style = PaintingStyle.fill
        ..strokeWidth = 1,
      Paint()
        ..color = const Color.fromARGB(255, 128, 128, 128)
        ..style = PaintingStyle.fill
        ..strokeWidth = 1,
      Paint()
        ..color = const Color.fromARGB(255, 255, 0, 0)
        ..style = PaintingStyle.fill
        ..strokeWidth = 1,
      Paint()
        ..color = Colors.amber
        ..style = PaintingStyle.fill
        ..strokeWidth = 1,
      Paint()
        ..color = const Color.fromARGB(255, 255, 179, 0)
        ..style = PaintingStyle.fill
        ..strokeWidth = 1,
      Paint()
        ..color = const Color.fromARGB(255, 0, 128, 255)
        ..style = PaintingStyle.fill
        ..strokeWidth = 1,
      Paint()
        ..color = const Color.fromARGB(128, 0, 128, 0)
        ..style = PaintingStyle.fill
        ..strokeWidth = 1
    ];
    for (int y = 0; y < data.length; y++) {
      for (int x = 0; x < data[y].length; x++) {
        if (data[y][x] > 0) {
          Paint disablePaint = Paint()
            ..color = grayScale(paint[data[y][x]].color)
            ..style = PaintingStyle.fill
            ..strokeWidth = 1;

          canvas.drawRect(Offset(wRatio * x, hRatio * y) & Size(wRatio * 0.9, hRatio * 0.9), disabled && data[y][x] > 1 ? disablePaint : paint[data[y][x]]);
        }
      }
    }
  }

  Color grayScale(Color color) {
    double value = color.red * 0.90 + color.green * 0.90 + color.blue;
    return Color.fromARGB(200, value.toInt(), value.toInt(), value.toInt());
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return false;
  }
}
